{"version":3,"sources":["webpack:///./node_modules/ngx-uploader/fesm5/ngx-uploader.js","webpack:///./src/app/pages/miscellaneous/not-found/not-found.component.html","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/guard/config.ts","webpack:///./src/app/guard/index.ts","webpack:///./src/app/guard/login.guard.ts","webpack:///./src/app/pages/miscellaneous/miscellaneous-routing.module.ts","webpack:///./src/app/pages/miscellaneous/miscellaneous.component.ts","webpack:///./src/app/pages/miscellaneous/miscellaneous.module.ts","webpack:///./src/app/pages/miscellaneous/not-found/not-found.component.scss","webpack:///./src/app/pages/miscellaneous/not-found/not-found.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACU;AACS;AACuD;;AAE3G;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,qCAAqC,wCAAwC;AAC7E,sCAAsC,sBAAsB;AAC5D,oCAAoC,uCAAuC;AAC3E;AACA;AACA,iCAAiC,0DAAY;AAC7C,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA;AACA,kBAAkB,+DAAQ,oBAAoB,kCAAkC,EAAE;AAClF,gDAAgD,+CAA+C,EAAE;AACjG;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,0CAA0C,uCAAuC;AACjF;AACA;AACA,SAAS;AACT,yCAAyC,sDAAQ;AACjD,uBAAuB,EAAE;AACzB;AACA,sCAAsC,yCAAyC;AAC/E;AACA,SAAS;AACT,iCAAiC,0BAA0B;AAC3D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,iFAAiF,4BAA4B,EAAE;AAC/G;AACA,oDAAoD,mDAAmD;AACvG;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,oEAAoE,oDAAoD,EAAE;AAC1H,mDAAmD,oCAAoC,2BAA2B,EAAE,EAAE;AACtH;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,iEAAiE,wBAAwB,EAAE;AAC3F;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,mFAAmF,yBAAyB,EAAE;AAC9G;AACA;AACA,0DAA0D,kDAAkD;AAC5G;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,2EAA2E,iCAAiC,EAAE;AAC9G;AACA;AACA,sDAAsD,gCAAgC;AACtF;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,mEAAmE,6BAA6B,EAAE;AAClG;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,kDAAkD,8BAA8B;AAChF;AACA;AACA;AACA;AACA;AACA,kDAAkD,qBAAqB;AACvE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,uBAAuB,EAAE;AACzB;AACA,sBAAsB,+DAAQ;AAC9B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,6BAA6B,+BAA+B;AAC5D,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,+CAA+C,EAAE;AACjD,2BAA2B,EAAE;AAC7B,4EAA4E,4CAA4C,EAAE;AAC1H;AACA;AACA;AACA,6DAA6D,gDAAgD,EAAE;AAC/G,2BAA2B,EAAE;AAC7B;AACA;AACA,8DAA8D,yCAAyC,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4BAA4B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,qBAAqB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uDAAuD,qBAAqB,EAAE;AAC9E;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B,EAAE;AAC3D,kCAAkC,aAAa,EAAE;AACjD;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wCAAwC,0DAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0CAA0C,0BAA0B,EAAE;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AA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","file":"default~app-indeks-indeks-module~app-pages-pages-module-es5.js","sourcesContent":["import { __spread } from 'tslib';\nimport { Observable, Subject } from 'rxjs';\nimport { mergeMap, finalize } from 'rxjs/operators';\nimport { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar UploadStatus = {\n    Queue: 0,\n    Uploading: 1,\n    Done: 2,\n    Cancelled: 3,\n};\nUploadStatus[UploadStatus.Queue] = 'Queue';\nUploadStatus[UploadStatus.Uploading] = 'Uploading';\nUploadStatus[UploadStatus.Done] = 'Done';\nUploadStatus[UploadStatus.Cancelled] = 'Cancelled';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} bytes\n * @return {?}\n */\nfunction humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    /** @type {?} */\n    var k = 1024;\n    /** @type {?} */\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    /** @type {?} */\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nvar NgUploaderService = /** @class */ (function () {\n    function NgUploaderService(concurrency, contentTypes, maxUploads) {\n        if (concurrency === void 0) { concurrency = Number.POSITIVE_INFINITY; }\n        if (contentTypes === void 0) { contentTypes = ['*']; }\n        if (maxUploads === void 0) { maxUploads = Number.POSITIVE_INFINITY; }\n        var _this = this;\n        this.queue = [];\n        this.serviceEvents = new EventEmitter();\n        this.uploadScheduler = new Subject();\n        this.subs = [];\n        this.contentTypes = contentTypes;\n        this.maxUploads = maxUploads;\n        this.uploadScheduler\n            .pipe(mergeMap(function (upload) { return _this.startUpload(upload); }, concurrency))\n            .subscribe(function (uploadOutput) { return _this.serviceEvents.emit(uploadOutput); });\n    }\n    /**\n     * @param {?} incomingFiles\n     * @return {?}\n     */\n    NgUploaderService.prototype.handleFiles = /**\n     * @param {?} incomingFiles\n     * @return {?}\n     */\n    function (incomingFiles) {\n        var _this = this;\n        var _a;\n        /** @type {?} */\n        var allowedIncomingFiles = [].reduce.call(incomingFiles, function (acc, checkFile, i) {\n            /** @type {?} */\n            var futureQueueLength = acc.length + _this.queue.length + 1;\n            if (_this.isContentTypeAllowed(checkFile.type) && futureQueueLength <= _this.maxUploads) {\n                acc = acc.concat(checkFile);\n            }\n            else {\n                /** @type {?} */\n                var rejectedFile = _this.makeUploadFile(checkFile, i);\n                _this.serviceEvents.emit({ type: 'rejected', file: rejectedFile });\n            }\n            return acc;\n        }, []);\n        (_a = this.queue).push.apply(_a, __spread([].map.call(allowedIncomingFiles, function (file, i) {\n            /** @type {?} */\n            var uploadFile = _this.makeUploadFile(file, i);\n            _this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n            return uploadFile;\n        })));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    NgUploaderService.prototype.initInputEvents = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var _this = this;\n        return input.subscribe(function (event) {\n            switch (event.type) {\n                case 'uploadFile':\n                    /** @type {?} */\n                    var uploadFileIndex = _this.queue.findIndex(function (file) { return file === event.file; });\n                    if (uploadFileIndex !== -1 && event.file) {\n                        _this.uploadScheduler.next({ file: _this.queue[uploadFileIndex], event: event });\n                    }\n                    break;\n                case 'uploadAll':\n                    /** @type {?} */\n                    var files = _this.queue.filter(function (file) { return file.progress.status === UploadStatus.Queue; });\n                    files.forEach(function (file) { return _this.uploadScheduler.next({ file: file, event: event }); });\n                    break;\n                case 'cancel':\n                    /** @type {?} */\n                    var id_1 = event.id || null;\n                    if (!id_1) {\n                        return;\n                    }\n                    /** @type {?} */\n                    var subs = _this.subs.filter(function (sub) { return sub.id === id_1; });\n                    subs.forEach(function (sub) {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                            /** @type {?} */\n                            var fileIndex = _this.queue.findIndex(function (file) { return file.id === id_1; });\n                            if (fileIndex !== -1) {\n                                _this.queue[fileIndex].progress.status = UploadStatus.Cancelled;\n                                _this.serviceEvents.emit({ type: 'cancelled', file: _this.queue[fileIndex] });\n                            }\n                        }\n                    });\n                    break;\n                case 'cancelAll':\n                    _this.subs.forEach(function (sub) {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                        }\n                        /** @type {?} */\n                        var file = _this.queue.find(function (uploadFile) { return uploadFile.id === sub.id; });\n                        if (file) {\n                            file.progress.status = UploadStatus.Cancelled;\n                            _this.serviceEvents.emit({ type: 'cancelled', file: file });\n                        }\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    /** @type {?} */\n                    var i = _this.queue.findIndex(function (file) { return file.id === event.id; });\n                    if (i !== -1) {\n                        /** @type {?} */\n                        var file = _this.queue[i];\n                        _this.queue.splice(i, 1);\n                        _this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (_this.queue.length) {\n                        _this.queue = [];\n                        _this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    };\n    /**\n     * @param {?} upload\n     * @return {?}\n     */\n    NgUploaderService.prototype.startUpload = /**\n     * @param {?} upload\n     * @return {?}\n     */\n    function (upload) {\n        var _this = this;\n        return new Observable(function (observer) {\n            /** @type {?} */\n            var sub = _this.uploadFile(upload.file, upload.event)\n                .pipe(finalize(function () {\n                if (!observer.closed) {\n                    observer.complete();\n                }\n            }))\n                .subscribe(function (output) {\n                observer.next(output);\n            }, function (err) {\n                observer.error(err);\n                observer.complete();\n            }, function () {\n                observer.complete();\n            });\n            _this.subs.push({ id: upload.file.id, sub: sub });\n        });\n    };\n    /**\n     * @param {?} file\n     * @param {?} event\n     * @return {?}\n     */\n    NgUploaderService.prototype.uploadFile = /**\n     * @param {?} file\n     * @param {?} event\n     * @return {?}\n     */\n    function (file, event) {\n        var _this = this;\n        return new Observable(function (observer) {\n            /** @type {?} */\n            var url = event.url || '';\n            /** @type {?} */\n            var method = event.method || 'POST';\n            /** @type {?} */\n            var data = event.data || {};\n            /** @type {?} */\n            var headers = event.headers || {};\n            /** @type {?} */\n            var xhr = new XMLHttpRequest();\n            /** @type {?} */\n            var time = new Date().getTime();\n            /** @type {?} */\n            var progressStartTime = (file.progress.data && file.progress.data.startTime) || time;\n            /** @type {?} */\n            var speed = 0;\n            /** @type {?} */\n            var eta = null;\n            xhr.upload.addEventListener('progress', function (e) {\n                if (e.lengthComputable) {\n                    /** @type {?} */\n                    var percentage = Math.round((e.loaded * 100) / e.total);\n                    /** @type {?} */\n                    var diff = new Date().getTime() - time;\n                    speed = Math.round(e.loaded / diff * 1000);\n                    progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n                    eta = Math.ceil((e.total - e.loaded) / speed);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: humanizeBytes(speed) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: null,\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta)\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', function (e) {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    /** @type {?} */\n                    var speedAverage = Math.round(file.size / (new Date().getTime() - progressStartTime) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: humanizeBytes(speedAverage) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: new Date().getTime(),\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta || 0)\n                        }\n                    };\n                    file.responseStatus = xhr.status;\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    file.responseHeaders = _this.parseResponseHeaders(xhr.getAllResponseHeaders());\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            try {\n                /** @type {?} */\n                var uploadFile_1 = (/** @type {?} */ (file.nativeFile));\n                /** @type {?} */\n                var uploadIndex = _this.queue.findIndex(function (outFile) { return outFile.nativeFile === uploadFile_1; });\n                if (_this.queue[uploadIndex].progress.status === UploadStatus.Cancelled) {\n                    observer.complete();\n                }\n                Object.keys(headers).forEach(function (key) { return xhr.setRequestHeader(key, headers[key]); });\n                /** @type {?} */\n                var bodyToSend = void 0;\n                if (event.includeWebKitFormBoundary !== false) {\n                    Object.keys(data).forEach(function (key) { return file.form.append(key, data[key]); });\n                    file.form.append(event.fieldName || 'file', uploadFile_1, uploadFile_1.name);\n                    bodyToSend = file.form;\n                }\n                else {\n                    bodyToSend = uploadFile_1;\n                }\n                _this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(bodyToSend);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return function () {\n                xhr.abort();\n            };\n        });\n    };\n    /**\n     * @param {?} sec\n     * @return {?}\n     */\n    NgUploaderService.prototype.secondsToHuman = /**\n     * @param {?} sec\n     * @return {?}\n     */\n    function (sec) {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    };\n    /**\n     * @return {?}\n     */\n    NgUploaderService.prototype.generateId = /**\n     * @return {?}\n     */\n    function () {\n        return Math.random().toString(36).substring(7);\n    };\n    /**\n     * @param {?} contentTypes\n     * @return {?}\n     */\n    NgUploaderService.prototype.setContentTypes = /**\n     * @param {?} contentTypes\n     * @return {?}\n     */\n    function (contentTypes) {\n        if (typeof contentTypes !== 'undefined' && contentTypes instanceof Array) {\n            if (contentTypes.find(function (type) { return type === '*'; }) !== undefined) {\n                this.contentTypes = ['*'];\n            }\n            else {\n                this.contentTypes = contentTypes;\n            }\n            return;\n        }\n        this.contentTypes = ['*'];\n    };\n    /**\n     * @return {?}\n     */\n    NgUploaderService.prototype.allContentTypesAllowed = /**\n     * @return {?}\n     */\n    function () {\n        return this.contentTypes.find(function (type) { return type === '*'; }) !== undefined;\n    };\n    /**\n     * @param {?} mimetype\n     * @return {?}\n     */\n    NgUploaderService.prototype.isContentTypeAllowed = /**\n     * @param {?} mimetype\n     * @return {?}\n     */\n    function (mimetype) {\n        if (this.allContentTypesAllowed()) {\n            return true;\n        }\n        return this.contentTypes.find(function (type) { return type === mimetype; }) !== undefined;\n    };\n    /**\n     * @param {?} file\n     * @param {?} index\n     * @return {?}\n     */\n    NgUploaderService.prototype.makeUploadFile = /**\n     * @param {?} file\n     * @param {?} index\n     * @return {?}\n     */\n    function (file, index) {\n        return {\n            fileIndex: index,\n            id: this.generateId(),\n            name: file.name,\n            size: file.size,\n            type: file.type,\n            form: new FormData(),\n            progress: {\n                status: UploadStatus.Queue,\n                data: {\n                    percentage: 0,\n                    speed: 0,\n                    speedHuman: humanizeBytes(0) + \"/s\",\n                    startTime: null,\n                    endTime: null,\n                    eta: null,\n                    etaHuman: null\n                }\n            },\n            lastModifiedDate: new Date(file.lastModified),\n            sub: undefined,\n            nativeFile: file\n        };\n    };\n    /**\n     * @private\n     * @param {?} httpHeaders\n     * @return {?}\n     */\n    NgUploaderService.prototype.parseResponseHeaders = /**\n     * @private\n     * @param {?} httpHeaders\n     * @return {?}\n     */\n    function (httpHeaders) {\n        if (!httpHeaders) {\n            return;\n        }\n        return httpHeaders.split('\\n')\n            .map(function (x) { return x.split(/: */, 2); })\n            .filter(function (x) { return x[0]; })\n            .reduce(function (acc, x) {\n            acc[x[0]] = x[1];\n            return acc;\n        }, {});\n    };\n    return NgUploaderService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgFileDropDirective = /** @class */ (function () {\n    function NgFileDropDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    NgFileDropDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._sub = [];\n        /** @type {?} */\n        var concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        /** @type {?} */\n        var allowedContentTypes = this.options && this.options.allowedContentTypes || ['*'];\n        /** @type {?} */\n        var maxUploads = this.options && this.options.maxUploads || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency, allowedContentTypes, maxUploads);\n        this.el = this.elementRef.nativeElement;\n        this._sub.push(this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        }));\n        if (this.uploadInput instanceof EventEmitter) {\n            this._sub.push(this.upload.initInputEvents(this.uploadInput));\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    };\n    /**\n     * @return {?}\n     */\n    NgFileDropDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._sub.forEach(function (sub) { return sub.unsubscribe(); });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NgFileDropDirective.prototype.onDrop = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        /** @type {?} */\n        var event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NgFileDropDirective.prototype.onDragOver = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (!e) {\n            return;\n        }\n        /** @type {?} */\n        var event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NgFileDropDirective.prototype.onDragLeave = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (!e) {\n            return;\n        }\n        /** @type {?} */\n        var event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    };\n    NgFileDropDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngFileDrop]'\n                },] }\n    ];\n    /** @nocollapse */\n    NgFileDropDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    NgFileDropDirective.propDecorators = {\n        options: [{ type: Input }],\n        uploadInput: [{ type: Input }],\n        uploadOutput: [{ type: Output }],\n        onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n        onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n        onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n    };\n    return NgFileDropDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgFileSelectDirective = /** @class */ (function () {\n    function NgFileSelectDirective(elementRef) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.fileListener = function () {\n            if (_this.el.files) {\n                _this.upload.handleFiles(_this.el.files);\n            }\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    NgFileSelectDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._sub = [];\n        /** @type {?} */\n        var concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        /** @type {?} */\n        var allowedContentTypes = this.options && this.options.allowedContentTypes || ['*'];\n        /** @type {?} */\n        var maxUploads = this.options && this.options.maxUploads || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency, allowedContentTypes, maxUploads);\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this._sub.push(this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        }));\n        if (this.uploadInput instanceof EventEmitter) {\n            this._sub.push(this.upload.initInputEvents(this.uploadInput));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgFileSelectDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.el) {\n            this.el.removeEventListener('change', this.fileListener, false);\n            this._sub.forEach(function (sub) { return sub.unsubscribe(); });\n        }\n    };\n    NgFileSelectDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngFileSelect]'\n                },] }\n    ];\n    /** @nocollapse */\n    NgFileSelectDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    NgFileSelectDirective.propDecorators = {\n        options: [{ type: Input }],\n        uploadInput: [{ type: Input }],\n        uploadOutput: [{ type: Output }]\n    };\n    return NgFileSelectDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxUploaderModule = /** @class */ (function () {\n    function NgxUploaderModule() {\n    }\n    NgxUploaderModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [NgFileDropDirective, NgFileSelectDirective],\n                    exports: [NgFileDropDirective, NgFileSelectDirective]\n                },] }\n    ];\n    return NgxUploaderModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UploadStatus, NgFileDropDirective, NgFileSelectDirective, humanizeBytes, NgUploaderService, NgxUploaderModule };\n\n//# sourceMappingURL=ngx-uploader.js.map","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <nb-card>\\r\\n      <nb-card-body>\\r\\n        <div class=\\\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\\\">\\r\\n          <h2 class=\\\"title\\\">404 Page Not Found</h2>\\r\\n          <small class=\\\"sub-title\\\">The page you were looking for doesn't exist</small>\\r\\n          <button nbButton fullWidth (click)=\\\"goToHome()\\\" type=\\\"button\\\" class=\\\"home-button\\\">\\r\\n            Take me home\\r\\n          </button>\\r\\n        </div>\\r\\n      </nb-card-body>\\r\\n    </nb-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n    let userRole = JSON.parse(localStorage.getItem(\"currentUser.role\"));\r\n    if (localStorage.getItem(\"currentUser\")) {\r\n      if (userRole && userRole.indexOf(state.url) === -1) {\r\n        this.router.navigate([\"/access-denied\"]);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else if (sessionStorage.getItem(\"currentUser\")) {\r\n      if (userRole && userRole.indexOf(state.url) === -1) {\r\n        this.router.navigate([\"/access-denied\"]);\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate([\"public/login\"]);\r\n    return false;\r\n  }\r\n}\r\n","export class Config {\r\n\tstatic get() {\r\n\t\treturn {\r\n\t\t\tapiBackend: \"/api/\",\r\n\t\t\tpage:1,\r\n\t\t\trows:10\r\n\t\t}\r\n\t}\r\n}\r\n","export * from './auth.guard';\r\nexport * from './login.guard';\r\nexport * from './config';","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n// import { MessageService } from 'primeng/api';\r\nimport { TranslatorService } from \"../service/translator.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n  konfirmLogout: string;\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem(\"currentUser\")) {\r\n      // this.messageService.clear();\r\n      // this.messageService.add({key: 't-logout', sticky: true, severity:'warn', summary:this.translate.getTranslate().konfirmLogout, detail:''});\r\n      return false;\r\n    } else if (sessionStorage.getItem(\"currentUser\")) {\r\n      // this.messageService.clear();\r\n      // this.messageService.add({key: 't-logout', sticky: true, severity:'warn', summary:this.translate.getTranslate().konfirmLogout, detail:''});\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MiscellaneousComponent } from './miscellaneous.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MiscellaneousComponent,\r\n    children: [\r\n      {\r\n        path: '404',\r\n        component: NotFoundComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MiscellaneousRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-miscellaneous',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class MiscellaneousComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NbButtonModule, NbCardModule } from '@nebular/theme';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\r\nimport { MiscellaneousComponent } from './miscellaneous.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ThemeModule,\r\n    NbCardModule,\r\n    NbButtonModule,\r\n    MiscellaneousRoutingModule,\r\n  ],\r\n  declarations: [\r\n    MiscellaneousComponent,\r\n    NotFoundComponent,\r\n  ],\r\n})\r\nexport class MiscellaneousModule { }\r\n","module.exports = \".flex-centered {\\n  margin: auto; }\\n\\nnb-card-body {\\n  display: flex; }\\n\\n.title {\\n  text-align: center; }\\n\\n.sub-title {\\n  text-align: center;\\n  display: block;\\n  margin-bottom: 3rem; }\\n\\n.home-button {\\n  margin-bottom: 2rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbWlzY2VsbGFuZW91cy9ub3QtZm91bmQvRTpcXDIwMTlcXGFuZ3VsYXJcXG5neC1hZG1pbi9zcmNcXGFwcFxccGFnZXNcXG1pc2NlbGxhbmVvdXNcXG5vdC1mb3VuZFxcbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWSxFQUFBOztBQUVkO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21pc2NlbGxhbmVvdXMvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mbGV4LWNlbnRlcmVkIHtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxubmItY2FyZC1ib2R5IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4udGl0bGUge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnN1Yi10aXRsZSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDNyZW07XHJcbn1cclxuXHJcbi5ob21lLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxufVxyXG4iXX0= */\"","import { NbMenuService } from '@nebular/theme';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-not-found',\r\n  styleUrls: ['./not-found.component.scss'],\r\n  templateUrl: './not-found.component.html',\r\n})\r\nexport class NotFoundComponent {\r\n\r\n  constructor(private menuService: NbMenuService) {\r\n  }\r\n\r\n  goToHome() {\r\n    this.menuService.navigateHome();\r\n  }\r\n}\r\n"],"sourceRoot":""}